{"version":3,"sources":["components/Chat.js","components/cijieLogin.js","App.js","serviceWorker.js","index.js"],"names":["Chat","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","message","messages","socket","io","sendMessage","alert","emit","author","setState","on","data","addMessage","console","log","concat","toConsumableArray","_this2","Send","input","Search","react_default","a","createElement","card","id","title","className","type","list","size","itemLayout","dataSource","renderItem","Item","Meta","avatar","src","href","description","Group","placeholder","value","onChange","ev","target","onPressEnter","enterButton","onSearch","React","Component","Login","style","backgroundColor","height","width","textAlign","marginLeft","marginRight","marginTop","marginBottom","position","top","left","transform","cover","alt","root","setName","Link","to","es_button","fontSize","Header","Footer","App","e","BrowserRouter","basename","window","location","pathname","layout","Route","path","exact","render","App_Index","cijieLogin_Login","Index","components_Chat","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c92a304.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Input, Card, List, Avatar} from 'antd';\r\nimport '../Chat.css';\r\n\r\nimport io from \"socket.io-client\";\r\n\r\nclass Chat extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: this.props.username,\r\n            message: '',\r\n            messages: []\r\n        };\r\n\r\n        this.socket = io('vanillacraft.cn:8080');\r\n\r\n        this.sendMessage = () => {\r\n            if (!this.username) {alert(\"请先弄一个用户名\")}\r\n            this.socket.emit('SEND_MESSAGE', {\r\n                author: this.state.username,\r\n                message: this.state.message\r\n            });\r\n            this.setState({message: ''});\r\n        };\r\n\r\n\r\n        this.socket.on('RECEIVE_MESSAGE', function(data){\r\n            addMessage(data);\r\n        });\r\n\r\n        const addMessage = data => {\r\n            console.log(data);\r\n            this.setState({messages: [...this.state.messages, data]});\r\n            console.log(this.state.messages);\r\n        };\r\n\r\n    }\r\n    render(){\r\n        const Send = Input.Search;\r\n        return (\r\n                <Card id=\"chat\" title=\"Chat Message\" className=\"messages\" type=\"inner\" >\r\n                    <List id=\"chatbox\"\r\n                          size=\"small\"\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.state.messages}\r\n                        renderItem={message => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src=\"http://lorempixel.com/100/100/\" />}\r\n                                    title={<a href=\"/users\">{message.author}</a>}\r\n                                    description={message.message}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                <Input.Group>\r\n                    <Send type=\"text\" placeholder=\"Message\" className=\"form-control\" value={this.state.message} onChange={ev => this.setState({message: ev.target.value})}\r\n                           onPressEnter={this.sendMessage} enterButton=\"Send\" onSearch={this.sendMessage}/>\r\n                </Input.Group>\r\n                </Card>\r\n        );\r\n\r\n    }\r\n}\r\n// <Input maxLength= \"10\" type=\"text\" placeholder=\"Username\" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className=\"form-control\"/>\r\nexport default Chat;","import React,{Component} from \"react\";\r\nimport { Card, Avatar, Input,Button } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\n\r\n\r\nexport default class Login extends Component{\r\n    render(){\r\n        const page_style = {\r\n            backgroundColor:\"#001529\",\r\n            height:\"100%\",\r\n            width:\"100%\"\r\n\r\n\r\n        };\r\n\r\n        const card_style = {\r\n            textAlign:\"center\",\r\n            width:350,\r\n            marginLeft:\"auto\",\r\n            marginRight:\"auto\",\r\n            marginTop:0,\r\n            marginBottom:0,\r\n            position: \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n\r\n            transform: \"translate(-50%, -50%)\"\r\n        };\r\n\r\n        const button_style = {\r\n\r\n            marginTop:\"20px\",\r\n            width:\"80px\",\r\n            height:\"35px\",\r\n            fontSize:\"20px\",\r\n            backgroundColor:\"#001529\"\r\n\r\n        };\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"login-page\" style={page_style} >\r\n\r\n                <Card\r\n                    style={card_style}\r\n                    cover={<img alt=\"example\" src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" />}\r\n                >\r\n                    <Meta\r\n                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                        title={<Input placeholder=\"Username\" value={this.props.root.state.username} onChange={this.props.root.setName}/>}\r\n                        description=\"Enter your name\"\r\n                    />\r\n                        <Link to=\"/\"><Button type=\"primary\" style={button_style}> Start!</Button></Link>\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\nimport Chat from \"./components/Chat\";\nimport { Layout } from 'antd';\nimport Login from \"./components/cijieLogin\";\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nconst { Header, Footer} = Layout;\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username :\"\",\n        }\n    }\n\n    setName = (e) =>{\n        this.setState({username : e.target.value});\n    };\n\n\n    render() {\n        return (\n            <Router basename={window.location.pathname}>\n                <Layout>\n                <Header>\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about/\">About</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/users/\">Users</Link>\n                        </li>\n                    </ul>\n                </Header>\n                <Route path=\"/\" exact render={() => <Index username={this.state.username}/>} />\n                <Route path=\"/users/\" render={() => <Login root={this}/>} />\n                <Footer>Copyright (c) 2018 Tianqi Wang</Footer>\n                </Layout>\n            </Router>\n        );\n    }\n}\n\nconst Index = (props) => (\n    <Layout>\n        <Chat username={props.username}/>\n    </Layout>\n);\n\nexport default App;\n\n/*\n<Sider>left  sidebar</Sider>\n<Content>\n    <Chat className=\"Chat\" username={props.username}/>\n</Content>\n<Sider>right sidebar</Sider>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}